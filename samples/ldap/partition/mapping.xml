<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapping PUBLIC
  "-//Penrose/DTD Mapping 1.1//EN"
  "http://penrose.safehaus.org/dtd/mapping.dtd">

<mapping>

  <entry dn="dc=LDAP,dc=Example,dc=com">
    <oc>dcObject</oc>
    <oc>organization</oc>
    <at name="dc" rdn="true">
      <constant>LDAP</constant>
    </at>
    <at name="o">
      <constant>LDAP</constant>
    </at>
    <aci subject="self">
      <permission>rws</permission>
    </aci>
    <aci>
      <target>ATTRIBUTES</target>
      <attributes>userPassword</attributes>
      <action>deny</action>
      <permission>rs</permission>
    </aci>
    <aci>
      <permission>rs</permission>
    </aci>
  </entry>

  <entry dn="ou=Users,dc=LDAP,dc=Example,dc=com">
    <oc>organizationalUnit</oc>
    <at name="ou" rdn="true">
      <constant>Users</constant>
    </at>
    <at name="description">
      <constant>This is an example of a simple LDAP mapping. All attributes are mapped without any changes.</constant>
    </at>
  </entry>

  <entry dn="uid=...,ou=Users,dc=LDAP,dc=Example,dc=com">
    <oc>person</oc>
    <oc>organizationalPerson</oc>
    <oc>inetOrgPerson</oc>
    <at name="uid" rdn="true">
      <variable>u.uid</variable>
    </at>
    <at name="cn">
      <variable>u.cn</variable>
    </at>
    <at name="sn">
      <variable>u.sn</variable>
    </at>
    <at name="userPassword">
      <variable>u.userPassword</variable>
    </at>
    <source name="u">
      <source-name>users</source-name>
      <field name="uid">
        <variable>uid</variable>
      </field>
      <field name="cn">
        <variable>cn</variable>
      </field>
      <field name="sn">
        <variable>sn</variable>
      </field>
      <field name="userPassword">
        <variable>userPassword</variable>
      </field>
    </source>
  </entry>

  <entry dn="ou=All Users,dc=LDAP,dc=Example,dc=com">
    <oc>organizationalUnit</oc>
    <at name="ou" rdn="true">
      <constant>All Users</constant>
    </at>
    <at name="description">
      <constant>In this example the RDN is generated from the cn attribute, which is not the RDN, of the entries in the target server. If the entry contains multiple values of cn attribute, it will generate multiple virtual entries.</constant>
    </at>
  </entry>

  <entry dn="cn=...,ou=All Users,dc=LDAP,dc=Example,dc=com">
    <oc>person</oc>
    <oc>organizationalPerson</oc>
    <oc>inetOrgPerson</oc>
    <at name="uid">
      <variable>u.uid</variable>
    </at>
    <at name="cn" rdn="true">
      <variable>u.cn</variable>
    </at>
    <at name="sn">
      <variable>u.sn</variable>
    </at>
    <at name="userPassword">
      <variable>u.userPassword</variable>
    </at>
    <source name="u">
      <source-name>users</source-name>
      <field name="uid">
        <variable>uid</variable>
      </field>
      <field name="cn">
        <variable>cn</variable>
      </field>
      <field name="sn">
        <variable>sn</variable>
      </field>
      <field name="userPassword">
        <variable>userPassword</variable>
      </field>
    </source>
  </entry>

  <entry dn="ou=Groups,dc=LDAP,dc=Example,dc=com">
    <oc>organizationalUnit</oc>
    <at name="ou" rdn="true">
      <constant>Groups</constant>
    </at>
    <at name="description">
      <constant>In this example the RDN is generated from the RDN of the entries in the target server.</constant>
    </at>
  </entry>

  <entry dn="cn=...,ou=Groups,dc=LDAP,dc=Example,dc=com">
    <oc>groupOfUniqueNames</oc>
    <at name="cn" rdn="true">
      <variable>g.primaryKey.cn</variable>
    </at>
    <at name="cn">
      <variable>g.cn</variable>
    </at>
    <at name="uniqueMember">
      <expression foreach="g.uniqueMember" var="um">
int i=um.indexOf("=");
int j=um.indexOf(",");
return "uid="+um.substring(i+1, j)+",ou=Users,dc=Example,dc=com";
      </expression>
    </at>
    <source name="g">
      <source-name>groups</source-name>
      <field name="cn" primaryKey="true">
        <variable>rdn.cn</variable>
      </field>
      <field name="cn">
        <variable>cn</variable>
      </field>
      <field name="uniqueMember">
        <expression foreach="uniqueMember" var="um">
int i=um.indexOf("=");
int j=um.indexOf(",");
return "uid="+um.substring(i+1, j)+",dc=my-domain,dc=com";
        </expression>
      </field>
    </source>
  </entry>

  <entry dn="ou=All Groups,dc=LDAP,dc=Example,dc=com">
    <oc>organizationalUnit</oc>
    <at name="ou" rdn="true">
      <constant>All Groups</constant>
    </at>
    <at name="description">
      <constant>In this example the RDN is generated from the cn attribute of the entries in the target server. If an entry contains multiple values of cn attribute, it will generate multiple virtual entries.</constant>
    </at>
  </entry>

  <entry dn="cn=...,ou=All Groups,dc=LDAP,dc=Example,dc=com">
    <oc>groupOfUniqueNames</oc>
    <at name="cn" rdn="true">
      <variable>g.cn</variable>
    </at>
    <at name="uniqueMember">
      <expression foreach="g.uniqueMember" var="um">
int i=um.indexOf("=");
int j=um.indexOf(",");
return "uid="+um.substring(i+1, j)+",ou=Users,dc=Example,dc=com";
      </expression>
    </at>
    <source name="g">
      <source-name>groups</source-name>
      <field name="cn">
        <variable>cn</variable>
      </field>
      <field name="uniqueMember">
        <expression foreach="uniqueMember" var="um">
int i=um.indexOf("=");
int j=um.indexOf(",");
return "uid="+um.substring(i+1, j)+",dc=my-domain,dc=com";
        </expression>
      </field>
    </source>
  </entry>

</mapping>
