<!--
 Copyright (c) 1998-2005, Verge Lab., LLC.
 All rights reserved.
-->
<project name="penrose" default="build" basedir=".">

    <property name="build.compiler" value="jikes"/>
    <property name="project.name" value="penrose"/>
    <property name="project.version" value="0.9.1"/>
    <property name="penrose.home" value="/usr/local/penrose"/>
    <property name="iscc.path" value="ISCC.exe"/>

    <path id="lib.path">
        <fileset dir="lib">
            <include name="**/*.jar"/>
        </fileset>
        <pathelement location="lib/"/>
    </path>

    <path id="main.path">
        <pathelement location="target/classes"/>
    </path>

    <path id="project.classpath">
        <fileset dir="svnant">
            <include name="**/*.jar"/>
        </fileset>
    </path>

    <taskdef resource="svntask.properties" classpathref="project.classpath"/>

    <target name="init">
        <tstamp>
            <format property="TODAY" pattern="yyyyMMdd"/>
        </tstamp>
    </target>

    <target name="build" depends="init">
        <javacc
            target="src/java/org/safehaus/penrose/schema/LDAPv3Schema.jj"
            javacchome="javacc"
            outputdirectory="src/java/org/safehaus/penrose/schema"
        />
        <javacc
            target="src/java/org/safehaus/penrose/filter/item/ItemParser.jj"
            javacchome="javacc"
            outputdirectory="src/java/org/safehaus/penrose/filter/item"
        />
        <javacc
            target="src/java/org/safehaus/penrose/filter/FilterParser.jj"
            javacchome="javacc"
            outputdirectory="src/java/org/safehaus/penrose/filter"
        />
        <javacc
            target="src/java/org/safehaus/penrose/openldap/config/SlapdParser.jj"
            javacchome="javacc"
            outputdirectory="src/java/org/safehaus/penrose/openldap/config"
        />
        <mkdir dir="target/classes"/>
        <javac
            srcdir="src/java"
            destdir="target/classes"
            classpathref="lib.path"
        />
        <rmic
            base="target/classes"
            classname="org.safehaus.penrose.PenroseRemoteObject"
            classpathref="lib.path"
        />
        <copy
            todir="target/classes">
			<fileset dir="src/java" includes="**/*.xml"/>
        </copy>
       <jar jarfile="target/${project.name}-${project.version}.jar">
            <fileset dir="target/classes"/>
        </jar>
    </target>

    <target name="docs">
        <mkdir dir="target/javadoc"/>
        <javadoc packagenames="org.safehaus.penrose.*"
            sourcepath="src/java"
            destdir="target/javadoc"
            classpathref="lib.path">
        </javadoc>
    </target>

    <target name="install" depends="build">
        <copy
            file="target/${project.name}-${project.version}.jar"
            todir="${penrose.home}/lib">
        </copy>
    </target>

    <target name="dist" depends="build,docs">
        <mkdir dir="target/dist"/>
        <copy todir="target/dist" file="README.txt"/>
        <copy todir="target/dist" file="LICENSE.txt"/>
        <copy todir="target/dist" file="COPYING.txt"/>
        <copy todir="target/dist" file="INSTALL-BINARY.txt"/>
        <copy todir="target/dist/docs">
            <fileset dir="docs" includes="*.url"/>
        </copy>
        <copy todir="target/dist/docs/javadoc">
            <fileset dir="target/javadoc"/>
        </copy>
        <copy todir="target/dist/lib">
            <fileset dir="lib"/>
        </copy>
        <copy todir="target/dist/lib"
            file="target/${project.name}-${project.version}.jar">
        </copy>
        <copy todir="target/dist/conf">
            <fileset dir="conf"/>
        </copy>
        <copy todir="target/dist/schema">
            <fileset dir="schema"/>
        </copy>
        <copy todir="target/dist"
            file="images/penrose.ico">
        </copy>
        <copy todir="target/dist/bin">
            <fileset dir="bin"/>
        </copy>
        <chmod dir="target/dist/bin" perm="ugo+rx" includes="**/*.sh"/>
        <copy todir="target/dist/samples">
            <fileset dir="samples"/>
        </copy>
        <mkdir dir="target/dist/var"/>
    </target>

    <target name="dist-unix" depends="dist">
        <zip destfile="target/${project.name}-${project.version}.zip"
            basedir="target/dist"/>
        <tar destfile="target/${project.name}-${project.version}.tar">
            <tarfileset dir="target/dist"
                prefix="${project.name}-${project.version}">
            </tarfileset>
        </tar>
        <gzip destfile="target/${project.name}-${project.version}.tar.gz"
            src="target/${project.name}-${project.version}.tar"/>
    </target>

    <target name="dist-win32" depends="dist">
        <echo message="Creating target/${project.name}-${project.version}.exe"/>
        <exec executable="${iscc.path}" os="Windows NT,Windows 2000,Windows XP,Windows 2003">
            <arg line="/Q penrose.iss"/>
        </exec>
    </target>

    <target name="dist-all" depends="dist-unix,dist-win32">
    </target>
    
    <target name="clean" depends="init">
        <delete dir="target"/>
    </target>

    <target name="update">
        <svn>
            <update dir="."/>
        </svn> 
    </target>

</project>
