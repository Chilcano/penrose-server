<!--
 Copyright (c) 2000-2005, Identyx Corporation.
 All rights reserved.
-->
<project name="penrose" default="build" basedir=".">

    <description>Penrose</description>

    <property name="project.name" value="penrose"/>
    <property name="project.version" value="1.1"/>
    <property name="project.dist" value="dist"/>
    <property name="prefix" value=""/>
    <property name="penrose.home" value="${prefix}/usr/local/${project.name}-${project.version}"/>
    <property name="iscc.path" value="ISCC.exe"/>
    <property name="docs.target" value="${project.dist}/javadoc"/>

    <property name="cygwin.home" value="c:/cygwin"/>

    <tstamp/>

    <path id="lib.path">
        <fileset dir="lib">
            <include name="**/*.jar"/>
        </fileset>
        <pathelement location="lib"/>
        <pathelement location="back-java/target/classes"/>
    </path>

    <path id="main.path">
        <pathelement location="target/classes"/>
    </path>

    <path id="project.classpath">
        <fileset dir="svnant">
            <include name="**/*.jar"/>
        </fileset>
    </path>

    <taskdef resource="svntask.properties" classpathref="project.classpath"/>

    <target name="init">
        <condition property="isWindows">
            <os family="windows"/>
        </condition>
        <condition property="isUnix">
            <os family="unix"/>
        </condition>
    </target>

    <target name="build-ant" depends="init">
        <mkdir dir="target/ant"/>
        <javac srcdir="src/ant" destdir="target/ant"/>
        <jar destfile="target/penrose-ant.jar" basedir="target/ant"/>
    </target>

    <target name="build" depends="init">
        <ant dir="back-java" target="build"/>
        <javacc
            target="src/java/org/safehaus/penrose/schema/LDAPv3Schema.jj"
            javacchome="lib/javacc"
            outputdirectory="src/java/org/safehaus/penrose/schema"
        />
        <javacc
            target="src/java/org/safehaus/penrose/filter/item/ItemParser.jj"
            javacchome="lib/javacc"
            outputdirectory="src/java/org/safehaus/penrose/filter/item"
        />
        <javacc
            target="src/java/org/safehaus/penrose/filter/FilterParser.jj"
            javacchome="lib/javacc"
            outputdirectory="src/java/org/safehaus/penrose/filter"
        />
        <javacc
            target="src/java/org/safehaus/penrose/openldap/config/SlapdParser.jj"
            javacchome="lib/javacc"
            outputdirectory="src/java/org/safehaus/penrose/openldap/config"
        />
        <javacc
            target="src/java/org/safehaus/penrose/sql/SQLParser.jj"
            javacchome="lib/javacc"
            outputdirectory="src/java/org/safehaus/penrose/sql"
        />
        <mkdir dir="target/classes"/>
        <javac
            srcdir="src/java"
            destdir="target/classes"
            classpathref="lib.path"
            debug="on"
            debuglevel="lines,vars,source"
            source="1.4"
            target="1.4"
        />
        <copy todir="target/classes">
            <fileset dir="src/java" includes="**/*.properties,**/*.xml,**/*.dtd"/>
        </copy>
        <jar jarfile="target/${project.name}-${project.version}.jar">
            <fileset dir="target/classes"/>
            <manifest>
              <attribute name="Specification-Version"  value="1.1"/>
              <attribute name="Implementation-Title"   value="Penrose Server"/>
              <attribute name="Implementation-Version" value="${project.version}"/>
              <attribute name="Implementation-Vendor"  value="Identyx Corporation"/>
              <attribute name="Build-Date" value="${DSTAMP}"/>
            </manifest>
        </jar>
    </target>

    <target name="docs" depends="build">
        <mkdir dir="target/javadoc"/>
        <javadoc packagenames="org.safehaus.penrose.*"
            sourcepath="src/java"
            destdir="target/javadoc"
            classpathref="lib.path">
        </javadoc>
        <jar jarfile="target/${project.name}-docs-${project.version}.jar">
            <fileset dir="target/javadoc"/>
        </jar>
    </target>

    <target name="docs-publish" depends="init">
        <delete dir="${docs.target}"/>
        <mkdir dir="${docs.target}"/>
        <copy todir="${docs.target}" overwrite="true">
            <fileset dir="target/javadoc" includes="**/*"/>
        </copy>
    </target>

    <target name="dist" depends="build-ant,build">
        <ant dir="back-java" target="dist"/>
        <mkdir dir="target/dist"/>
        <copy todir="target/dist" file="README.txt">
            <filterchain>
                <expandproperties/>
            </filterchain>
        </copy>
        <copy todir="target/dist" file="LICENSE.txt"/>
        <copy todir="target/dist" file="COPYING.txt"/>
        <copy todir="target/dist" file="INSTALL-BINARY.txt">
            <filterchain>
                <expandproperties/>
            </filterchain>
        </copy>
        <copy todir="target/dist" file="pom.xml"/>
        <copy todir="target/dist/etc">
            <fileset dir="etc" includes="**/*"/>
        </copy>
        <chmod file="target/dist/etc/init.d/penrose" perm="ugo+rx"/>
        <copy todir="target/dist/docs">
            <fileset dir="docs" includes="*.url"/>
        </copy>
        <copy todir="target/dist/docs/javadoc" failonerror="false">
            <fileset dir="target/javadoc"/>
        </copy>
        <copy todir="target/dist/lib" includeEmptyDirs="false">
            <fileset dir="lib" includes="*"/>
        </copy>
        <copy todir="target/dist/lib">
            <fileset dir="back-java/dist" includes="openldap-*.jar"/>
        </copy>
        <copy todir="target/dist/lib"
            file="target/${project.name}-${project.version}.jar">
        </copy>
        <mkdir dir="target/dist/lib/ext"/>
        <copy todir="target/dist/conf/default">
            <fileset dir="conf"/>
        </copy>
        <taskdef
                name="wrapper"
                classname="org.safehaus.penrose.ant.WrapperTask"
                classpath="target/penrose-ant.jar"
        />
        <wrapper file="target/dist/conf/default/wrapper.conf" dir="lib"/>
        <copy todir="target/dist/conf">
            <fileset dir="target/dist/conf/default"/>
        </copy>
        <mkdir dir="target/dist/schema/ext"/>
        <copy todir="target/dist/schema">
            <fileset dir="schema"/>
        </copy>
        <copy todir="target/dist"
            file="images/penrose.ico">
        </copy>
        <copy todir="target/dist/bin">
            <fileset dir="bin"/>
        </copy>
        <copy todir="target/dist/dtd" flatten="true">
            <fileset dir="src" includes="**/*.dtd"/>
        </copy>
        <fixcrlf
            srcdir="target/dist/bin"
            includes="**/*.sh"
            eol="unix"
        />
        <chmod dir="target/dist/bin" perm="ugo+rx" includes="**/*.sh"/>
        <copy todir="target/dist/samples">
            <fileset dir="samples"/>
        </copy>
        <mkdir dir="target/dist/partitions"/>
        <mkdir dir="target/dist/var"/>
    </target>

    <target name="dist-src" depends="docs,dist">
        <echo message="Creating ${project.name}-${project.version}-src.zip"/>
        <mkdir dir="${project.dist}"/>
        <zip destfile="${project.dist}/${project.name}-${project.version}-src.zip">
            <zipfileset dir=".">
                <exclude name="${project.dist}/**"/>
                <exclude name="target/**"/>
            </zipfileset>
        </zip>
        <echo message="Creating ${project.name}-${project.version}-src.tar.gz"/>
        <mkdir dir="target"/>
        <tar destfile="${project.dist}/${project.name}-${project.version}-src.tar.gz" compression="gzip">
            <tarfileset dir="." prefix="${project.name}-${project.version}">
                <exclude name="${project.dist}/**"/>
                <exclude name="target/**"/>
            </tarfileset>
        </tar>
    </target>

    <target name="dist-unix" depends="docs,dist">
        <echo message="Creating ${project.name}-${project.version}.zip"/>
        <mkdir dir="${project.dist}"/>
        <zip destfile="${project.dist}/${project.name}-${project.version}.zip"
            basedir="target/dist"/>
        <echo message="Creating ${project.name}-${project.version}.tar.gz"/>
        <mkdir dir="target"/>
        <tar destfile="${project.dist}/${project.name}-${project.version}.tar.gz" compression="gzip">
            <tarfileset dir="target/dist" prefix="${project.name}-${project.version}" mode="755">
                <include name="bin/*.sh"/>
            </tarfileset>
            <tarfileset dir="target/dist" prefix="${project.name}-${project.version}">
                <include name="**/*"/>
                <exclude name="bin/*.sh"/>
            </tarfileset>
        </tar>
    </target>

    <target name="dist-rpm" depends="dist-src">
        <antcall target="dist-rpm-unix"/>
        <antcall target="dist-rpm-windows"/>
    </target>

    <target name="dist-rpm-unix" if="isUnix">
        <property name="rpm.prefix" value=""/>
        <property name="rpm.home" value="/usr/src/redhat"/>
        <property name="rpm.builder" value="/usr/bin/rpmbuild"/>
        <copy todir="target" file="rpm/penrose.spec">
            <filterchain>
                <expandproperties/>
            </filterchain>
        </copy>
        <copy todir="${rpm.home}/SOURCES" overwrite="true"
            file="${project.dist}/${project.name}-${project.version}-src.tar.gz">
        </copy>
        <exec executable="${rpm.builder}">
            <arg line="-ba target/penrose.spec"/>
        </exec>
        <copy todir="${project.dist}" failonerror="false"
            file="${rpm.home}/SRPMS/${project.name}-${project.version}-1.src.rpm">
        </copy>
        <copy todir="${project.dist}" failonerror="false"
            file="${rpm.home}/RPMS/i386/${project.name}-${project.version}-1.i386.rpm">
        </copy>
    </target>

    <target name="dist-rpm-windows" if="isWindows">
        <property name="rpm.prefix" value="${cygwin.home}"/>
        <property name="rpm.home" value="${cygwin.home}/usr/src/rpm"/>
        <property name="rpm.builder" value="${cygwin.home}/lib/rpm/rpmb.exe"/>
        <copy todir="target" file="rpm/penrose.spec">
            <filterchain>
                <expandproperties/>
            </filterchain>
        </copy>
        <copy todir="${rpm.home}/SOURCES" overwrite="true"
            file="${project.dist}/${project.name}-${project.version}-src.tar.gz">
        </copy>
        <exec executable="${rpm.builder}">
            <arg line="-ba target/penrose.spec"/>
        </exec>
        <copy todir="${project.dist}" failonerror="false"
            file="${rpm.home}/SRPMS/${project.name}-${project.version}-1.src.rpm">
        </copy>
        <copy todir="${project.dist}" failonerror="false"
            file="${rpm.home}/RPMS/i386/${project.name}-${project.version}-1.cygwin.i386.rpm">
        </copy>
    </target>

    <target name="dist-win32" depends="docs,dist" if="isWindows">
        <echo message="Creating ${project.name}-${project.version}.exe"/>
        <copy todir="target" file="penrose.iss">
            <filterchain>
                <expandproperties/>
            </filterchain>
        </copy>
        <mkdir dir="${project.dist}"/>
        <exec executable="${iscc.path}">
            <arg line="/Q target/penrose.iss"/>
        </exec>
    </target>

    <target name="dist-all" depends="dist-src,dist-unix,dist-win32,dist-rpm">
        <copy todir="${project.dist}"
            file="target/${project.name}-${project.version}.jar">
        </copy>
    </target>

    <target name="pre-install">
        <mkdir dir="${penrose.home}"/>
        <condition property="penrose.conf.missing">
          <not>
            <available file="${penrose.home}/conf/server.xml"/>
          </not>
        </condition>
    </target>

    <target name="copy-penrose-conf" if="penrose.conf.missing">
        <copy todir="${penrose.home}">
            <fileset dir="target/dist">
                <include name="conf/**/*"/>
            </fileset>
        </copy>
    </target>

    <target name="install" depends="init,pre-install,copy-penrose-conf">
        <delete failonerror="false">
            <fileset dir="${penrose.home}" includes="lib/*"/>
        </delete>
        <copy todir="${penrose.home}">
            <fileset dir="target/dist">
                <include name="**/*"/>
                <exclude name="conf/**/*"/>
            </fileset>
        </copy>
        <chmod dir="${penrose.home}/bin" perm="ugo+rx" includes="**/*.sh"/>
    </target>

    <target name="uninstall">
        <delete failonerror="false" includeemptydirs="true">
            <fileset dir="${penrose.home}/bin" includes="**/*"/>
            <fileset dir="${penrose.home}/conf/default" includes="*"/>
            <fileset dir="${penrose.home}/docs" includes="**/*"/>
            <fileset dir="${penrose.home}/lib" includes="*"/>
            <fileset dir="${penrose.home}/samples" includes="**/*"/>
            <fileset dir="${penrose.home}/schema" includes="**/*"/>
            <fileset dir="${penrose.home}" includes="*"/>
        </delete>
    </target>

    <target name="clean">
        <ant dir="back-java" target="clean"/>
        <delete dir="dist" failonerror="false"/>
        <delete dir="target" failonerror="false"/>
    </target>

    <target name="update">
        <svn>
            <update dir="."/>
        </svn> 
    </target>

</project>
