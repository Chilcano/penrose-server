<!--
 Copyright (c) 2000-2005, Identyx Corporation.
 All rights reserved.
-->
<project name="back-java" default="build">

    <description>Java Backend for OpenLDAP</description>

    <property name="prefix" value=""/>
    <property name="cygwin.home" value="c:/cygwin"/>

    <property name="openldap.version" value="2.2.26"/>
    <property name="openldap.src" value="${cygwin.home}/usr/src/openldap-${openldap.version}"/>
    <property name="openldap.patch" value="openldap-${openldap.version}/openldap.patch"/>

    <property file="build.properties"/>

    <property name="module.name" value="openldap-servers-java"/>
    <property name="module.version" value="${openldap.version}"/>
    <property name="module.dist" value="dist"/>

    <tstamp/>

    <target name="init">
        <condition property="isWindows">
            <os family="windows"/>
        </condition>
        <condition property="isUnix">
            <os family="unix"/>
        </condition>
    </target>

    <target name="copy" depends="init">
        <copy todir="${openldap.src}/servers/slapd/back-java" overwrite="true">
            <fileset dir="src/c" />
        </copy>
    </target>

    <target name="patch" depends="copy">
        <antcall target="patch-unix"/>
        <antcall target="patch-windows"/>
    </target>

    <target name="patch-unix" if="isUnix">
        <property name="patch" value="/usr/bin/patch"/>
        <echo message="Patching files in ${openldap.src} using ${openldap.patch}:" />
        <exec executable="${patch}">
            <arg line="-p1"/>
            <arg line="-i ${basedir}/${openldap.patch}"/>
            <arg line="-d ${openldap.src}"/>
        </exec>
    </target>

    <target name="patch-windows" if="isWindows">
        <property name="dlltool" value="${cygwin.home}/bin/dlltool.exe"/>
        <echo message="Calling ${dlltool}:" />
        <echo message=" --input-def ${openldap.src}/servers/slapd/back-java/jvm.def" />
        <echo message=" --output-lib ${openldap.src}/servers/slapd/back-java/libjvm.dll.a" />
        <exec executable="${dlltool}">
            <arg line="--input-def ${openldap.src}/servers/slapd/back-java/jvm.def"/>
            <arg line="--output-lib ${openldap.src}/servers/slapd/back-java/libjvm.dll.a"/>
            <arg line="--kill-at"/>
            <arg line="--dllname jvm.dll"/>
        </exec>
        <property name="patch" value="${cygwin.home}/bin/patch.exe"/>
        <echo message="Patching files in ${openldap.src} using ${openldap.patch}:" />
        <exec executable="${patch}">
            <arg line="-p1"/>
            <arg line="-i ${basedir}/${openldap.patch}"/>
            <arg line="-d ${openldap.src}"/>
        </exec>
    </target>

    <target name="compile" depends="init">
        <echo message="Compiling Java Backend."/>
        <mkdir dir="target/classes"/>
        <javac
            srcdir="src/java"
            destdir="target/classes"
            debug="on"
            debuglevel="lines,vars,source"
            source="1.4"
            target="1.4"
        />
        <copy todir="target/classes">
            <fileset dir="src/java" includes="**/*.properties,**/*.xml,**/*.dtd"/>
        </copy>
    </target>

    <target name="build" depends="compile">
        <echo message="Building Java Backend."/>
        <jar jarfile="target/openldap-${openldap.version}.jar">
            <fileset dir="target/classes"/>
            <manifest>
              <attribute name="Build-Date" value="${DSTAMP}"/>
            </manifest>
        </jar>
    </target>

    <target name="docs" depends="init">
        <mkdir dir="target/javadoc"/>
        <javadoc packagenames="org.openldap.backend.*"
            sourcepath="src/java"
            destdir="target/javadoc">
        </javadoc>
    </target>

    <target name="dist" depends="build">
        <mkdir dir="dist"/>
        <copy todir="dist"
            file="target/openldap-${openldap.version}.jar">
        </copy>
    </target>

    <target name="dist-src" depends="init">
        <mkdir dir="dist"/>
        <tar destfile="dist/${module.name}-${module.version}-src.tar.gz" compression="gzip">
            <tarfileset dir="openldap-${openldap.version}/${os.name}" prefix="${module.name}-${module.version}/lib" mode="755">
            </tarfileset>
            <tarfileset dir="openldap-${openldap.version}" prefix="${module.name}-${module.version}">
                <include name="build.properties"/>
            </tarfileset>
            <tarfileset dir="." prefix="${module.name}-${module.version}">
                <include name="build.xml"/>
            </tarfileset>
            <tarfileset dir="src/java" prefix="${module.name}-${module.version}/src/java">
            </tarfileset>
        </tar>
    </target>

    <target name="install" depends="dist">
        <property name="ln" value="/bin/ln"/>
        <mkdir dir="${prefix}/usr/sbin/openldap"/>
        <copy todir="${prefix}/usr/sbin/openldap" failonerror="false">
            <fileset dir="lib"/>
        </copy>
        <chmod dir="${prefix}/usr/sbin/openldap" perm="ugo+rx" includes="**/*"/>
        <echo message="Create link ${back.java.library.link} to ${back.java.library.name}"/>
        <exec executable="${ln}" os="Linux">
            <arg line="-sf ${back.java.library.name} ${prefix}/usr/sbin/openldap/${back.java.library.link}"/>
        </exec>
        <mkdir dir="${prefix}/usr/share/openldap/lib"/>
        <copy todir="${prefix}/usr/share/openldap/lib" file="dist/openldap-${openldap.version}.jar"/>
        <mkdir dir="${prefix}/usr/share/doc/${module.name}-${module.version}/javadoc"/>
        <copy todir="${prefix}/usr/share/doc/${module.name}-${module.version}/javadoc">
            <fileset dir="target/javadoc"/>
        </copy>
    </target>

    <target name="dist-unix" depends="dist">
    </target>

    <target name="dist-rpm" depends="dist-src">
        <mkdir dir="dist"/>
        <antcall target="dist-rpm-unix"/>
        <antcall target="dist-rpm-windows"/>
    </target>

    <target name="dist-rpm-unix" if="isUnix">
        <property name="rpm.release" value="1.FC3"/>
        <property name="rpm.prefix" value=""/>
        <property name="rpm.home" value="/usr/src/redhat"/>
        <property name="rpm.builder" value="/usr/bin/rpmbuild"/>
        <copy todir="target" file="installer/${module.name}.spec">
            <filterchain>
                <expandproperties/>
            </filterchain>
        </copy>
        <copy todir="${rpm.home}/SOURCES" overwrite="true"
            file="${module.dist}/${module.name}-${module.version}-src.tar.gz">
        </copy>
        <exec executable="${rpm.builder}">
            <arg line="-ba target/${module.name}.spec"/>
        </exec>
        <copy todir="${module.dist}" failonerror="false"
            file="${rpm.home}/SRPMS/${module.name}-${module.version}-1.FC3.src.rpm">
        </copy>
        <copy todir="${module.dist}" failonerror="false"
            file="${rpm.home}/RPMS/i386/${module.name}-${module.version}-1.FC3.i386.rpm">
        </copy>
    </target>

    <target name="dist-rpm-windows" if="isWindows">
        <property name="rpm.release" value="1"/>
        <property name="rpm.prefix" value="${cygwin.home}"/>
        <property name="rpm.home" value="${cygwin.home}/usr/src/rpm"/>
        <property name="rpm.builder" value="${cygwin.home}/lib/rpm/rpmb.exe"/>
        <copy todir="target" file="installer/${module.name}.spec">
            <filterchain>
                <expandproperties/>
            </filterchain>
        </copy>
        <copy todir="${rpm.home}/SOURCES" overwrite="true"
            file="${module.dist}/${module.name}-${module.version}-src.tar.gz">
        </copy>
        <exec executable="${rpm.builder}">
            <arg line="-ba target/${module.name}.spec"/>
        </exec>
        <copy todir="${module.dist}" failonerror="false"
            file="${rpm.home}/SRPMS/${module.name}-${module.version}-1.src.rpm">
        </copy>
        <copy todir="${module.dist}" failonerror="false"
            file="${rpm.home}/RPMS/i386/${module.name}-${module.version}-1.cygwin.i386.rpm">
        </copy>
    </target>

    <target name="dist-win32" depends="dist">
    </target>

    <target name="dist-all" depends="dist-unix,dist-win32,dist-rpm">
    </target>

    <target name="clean" depends="init">
        <delete dir="target" failonerror="false"/>
        <delete dir="dist" failonerror="false"/>
    </target>

</project>
